Step 1:
rec_ocr.sh filename.pdf first last [tc] # first last to indicate the start and end page of the contents
    generated tmp file "result.txt" include the recognized text.
    tc tell the script to preprocess the image with textcleaner

Step 2:
test_ocr.sh 'regex' # test the regex to extract correcsponding info if ok it will insert the regext into 
    file "content" which have the " regex   layer " info. You can try manay times to insert enough rules
    and rank start from 1 not 0

Step 3:
merge.sh filename.pdf/djvu
    it will first use the content to generate a awk script, then use the awk script to write a pdf info file
    than write this info file back into the origin pdf file
    it generate a new pdf with the capitized filename of origin name 

# the pattern in file'content' will be overrided by following pattern in default, you can specifiy lines in 'result.txt' with :::1 to indicate force `continue`

// dont need to use \. to mean literal . use [.] instead

step 2 require dependency of fzf cmd if you want to use auto select previous archived regex, it will be activated when you run 'ocr_test' directly without a regex input

frequent regexs:
'^ *([0-9]+\.[0-9]+ *[-+?a-zA-Z —]+)[. ]*([0-9]+)$'
'^ *([0-9]* *[-+a-zA-Z —]+) *([0-9]+)$'
^(Part.*)\ +(-?[0-9]+)$
^ *([a-zA-Z‘’ —]+)[. ]*([-0-9]+)$
^ *([0-9a-zA-Z,?‘’ —]+[^0-9-])[. ]*([-0-9]+)$
^(Part [0-9a-zA-Z,?‘’ —]+[^0-9-])[. ]*([-0-9]+)$
^(I+\.[0-9]+.+[^0-9-])[. ]*([-0-9]+)$
^(V?I+\.[0-9]+.+[^0-9-])[. ]*([-0-9]+)$
^([A-Z].*)[ ]+([-0-9]+)$
^(.[0-9]{1,2}.*)[ ]+([-0-9]+)$
^([0-9].*)[ ]+([-0-9]+)$
^ *([a-zA-Z‘’: —]+)[. ]*([-0-9]+)$
^ *([0-9]* *[-+:,.a-zA-Z' —]+) *([0-9]+)$
^([0-9]+ +.*)[ ]+([-0-9]+)$
^([^0-9].*)[ ]+([-0-9]+)$
^([0-9]+[.][0-9]+ +.*)[ ]+([-0-9]+)$

PageLabelBegin
PageLabelNewIndex: 1
PageLabelStart: 1
PageLabelPrefix: C
PageLabelNumStyle: NoNumber
PageLabelBegin
PageLabelNewIndex: 2
PageLabelStart: 1
PageLabelNumStyle: LowercaseRomanNumerals
PageLabelBegin
PageLabelNewIndex: 18
PageLabelStart: 1
PageLabelNumStyle: DecimalArabicNumerals
PageLabelBegin
PageLabelNewIndex: 1154
PageLabelStart: 1
PageLabelPrefix: Plates
PageLabelNumStyle: NoNumber

##todo
add check.py
regex group and usage tip
regex frequency record and sort
transport to python
scan and match and count to infer and then recommend regex
