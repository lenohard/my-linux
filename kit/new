#!/usr/bin/env bash
set -o errexit -o pipefail -o noclobber 

# ------------------BEGIN------------------------------
# ==> parameters parsing

! getopt --test > /dev/null
if [[ ${PIPESTATUS[0]} -ne 4 ]]; then
    echo "Iâ€™m sorry, `getopt --test` failed in this environment."
    exit 1
fi

OPTIONS=d:s:c:n:
LONGOPTS=dir,source-file,copy-file,name
! PARSED=$(getopt --options=$OPTIONS --longoptions=$LONGOPTS --name "$0" --name "$@")
if [[ ${PIPESTATUS[0]} -ne 0 ]]; then
    echo "Usage: $0 [-d|--dir] -s|--source-file [-n|--name] [-c|--copy-file] 
                 $0 [-d|--dir] [-n|--name]"
    exit 2
fi
eval set -- "$PARSED"
DIR="."
COPY="newfile"
while true; do
    case "$1" in
        -d|--dir)
            DIR="$2"
            shift 2
            ;;
        -s|--source-file)
            REF="$2"
            shift 2
            ;;
        -c|--copy-file)
            COPY="$2"
            shift 2
            ;;
        -n|--name)
            NAME="$2"
            shift 2
            ;;
        --)
            shift
            break
            ;;
        *)
            echo "Usage: $0 [-d|--dir] -s|--source-file [-n|--name] [-c|--copy-file] 
                         $0 [-d|--dir] [-n|--name]"
            exit 3
            ;;
        esac
done

# ==================END================================
cd "$DIR"
tmux new-session -s "$NAME" -d
if [[ -z $REF ]];
then
    tmux splitw -t 1 -d -h -p 35
else
    #tmux splitw -t 2 -d -p 30
    #tmux send-key -t 1 'nvim  -S ~/.vim/sessions/cs231n.vim' 'Enter'
    if [[ ! -r $REF ]];
    then
        echo "$REF" doesn\'t exis
        exit 3
    fi
    VIMCMD="nvim -O \"$REF\" \"$COPY\""
    tmux splitw -t 1 -d -h -p 22
    tmux send-key -t 1 "$VIMCMD" 'Enter'
    # tmux send-key -t 3 'cal' 'Enter'
    # tmux send-key -t 2 'import numpy as np' 'Enter'
fi
tmux rename-window -t 1 'main'
tmux attach -t "$NAME"
