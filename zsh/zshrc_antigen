# ------------------BEGIN------------------------------
#  ==>antigen
source ~/.antigen.zsh

# Load the oh-my-zsh's library.
antigen use oh-my-zsh
# Load the theme
antigen theme rkj-repos
# Bundles from the default repo (robbyrussell's oh-my-zsh).
antigen bundle extract
antigen bundle gitfast
antigen bundle git-extras
antigen bundle safe-paste
antigen bundle vi-mode
antigen bundle heroku
antigen bundle pip
antigen bundle lein
antigen bundle command-not-found
antigen bundle thefuck
antigen bundle sublime
# antigen bundle autojump
antigen bundle common-aliases
antigen bundle compleat
antigen bundle git-extras
antigen bundle zsh-reload
antigen bundle git-flow
antigen bundle npm
antigen bundle z
antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle zdharma/history-search-multi-word
# antigen bundle zsh-users/zsh-history-substring-search 
antigen bundle zsh-users/zsh-autosuggestions

antigen apply


# ------------------BEGIN------------------------------
#  ==>oh my zsh
plugins=(zsh-reload zsh-history-substring-search)

# ==================END================================

fpath=(/usr/local/share/zsh-completions $fpath)
man() {
    env LESS_TERMCAP_mb=$'\E[01;31m' \
        LESS_TERMCAP_md=$'\E[01;38;5;74m' \
        LESS_TERMCAP_me=$'\E[0m' \
        LESS_TERMCAP_se=$'\E[0m' \
        LESS_TERMCAP_so=$'\E[38;5;246m' \
        LESS_TERMCAP_ue=$'\E[0m' \
        LESS_TERMCAP_us=$'\E[04;38;5;146m' \
        man "$@"
    }


# ------------------BEGIN-----------------------
# os-specific 

if [[ -e /etc/os-release ]];
then
    os=$(cat /etc/os-release | grep '^ID=' | cut -c4- | tr '[:upper:]' '[:lower:]')
    if [ -n "$os" ];then
        case "$os" in
            "arch")
                alias syslog='sudo journalctl -r'
                alias logmonitor='sudo journalctl -f'
                ;;
            "ubuntu"|"elementary")
                alias syslog='sudo less /var/log/syslog'
                alias logmonitor='sudo tail -f /var/log/syslog'
                ;;
            *)
                ;;
        esac
    fi
fi

# ==================END=========================

setopt extended_glob
source $HOME/kit/tools.sh
export PATH="$HOME/kit/ocr:$HOME/kit:$PATH"
export EDITOR="nvim"

function cdd(){
    cd $@ && ls
}
function showme()
{
    if which nvim > /dev/null 2>&1;
    then
        nvim "$(which $1)" 
    else
        vim "$(which $1)"
    fi
}
function findit()
{
    case $# in 
        0 )
            echo "arguments required"
            return 0
            ;;
        1 )
            find "$PWD" -iname "*$1*"
            ;;
        2 )
            find "$(realpath $2)" -iname "*$1*"
            ;;
        * )
            echo ":find PARTEN [path]"
            return 0
    esac
}
function findv()
{
    nvim "$(findit $@ | select.py)"
}
function findc()
{
    cd "$(dirname "$(findit $@ | select.py)")"
}
function findout()
{
    findit $@ | select.py
}
function swap()         
{
    local TMPFILE=tmp.$$
    mv "$1" $TMPFILE
    mv "$2" "$1"
    mv $TMPFILE "$2"
}
#function to set or unset proxy in terminal
function setproxy() {
    # if [[ $(uname) == Darwin ]];
    # then
    #     ;
    # else
    #     ;
    # fi
    export {http,https,ftp}_proxy="${2-socks5}://127.0.0.1:${PORT-1080}"
}
function proxy_clash(){
    export https_proxy=http://127.0.0.1:7890;export http_proxy=http://127.0.0.1:7890;export all_proxy=socks5://127.0.0.1:7891
}
function unsetproxy() {
    unset {http,https,ftp,all_proxy}_proxy
}
function help() {
    bash -c "help $1"
}
function color(){
    for i in {0..255} ; do
        printf "\x1b[38;5;${i}m%3d " "${i}"
        if (( $i == 15 )) || (( $i > 15 )) && (( ($i-15) % 12 == 0 )); then
            echo;
        fi
    done
}

if [[ ! $(hostname) == 'iMac.wdh' ]];
then
    plugins+=(fasd)
    eval "$(fasd --init auto)"
    alias z='fasd_cd -d'     # cd, same functionality as j in autojump
    alias zz='fasd_cd -d -i' # cd with interactive selection
else
    . /usr/local/etc/profile.d/z.sh 
fi

alias a='fasd -a'        # any
alias s='fasd -si'       # show / search / select
alias d='fasd -d'        # directory
alias f='fasd -f'        # file
alias sd='fasd -sid'     # interactive directory selection
alias sf='fasd -sif'     # interactive file selection
alias vv='fasd -e vim'


export R_ENVIRON_USER='/home/carl/.config/r/.Renviron'

export AURDEST='/var/cache/pacaur/pkg'

#transfer.sh, to upload file and share with a link
transfer() { if [ $# -eq 0 ]; then echo -e "No arguments specified. Usage:\necho transfer /tmp/test.md\ncat /tmp/test.md | transfer test.md"; return 1; fi 
    tmpfile=$( mktemp -t transferXXX ); if tty -s; then basefile=$(basename "$1" | sed -e 's/[^a-zA-Z0-9._-]/-/g'); curl --progress-bar --upload-file "$1" "https://transfer.sh/$basefile" >> $tmpfile; else curl --progress-bar --upload-file "-" "https://transfer.sh/$1" >> $tmpfile ; fi; cat $tmpfile; rm -f $tmpfile; } 


#source /home/carl/kit/env_proxy
plugins+=(zsh-proxychains-ng)

#ssh log in to server hosted on vultr 
export set github="https://github.com/"

#save $PS1 for restore
export PS_="$PS1"
# alias ssl="nohup  sslocal -s  144.202.105.34 -p 9525 -k vultr@_2018 &"
alias ssl="nohup  sslocal -s  192.168.1.101  -p 8387 -k vultr@_2018 &"
alias locat="locate -Abi"
alias pcs=proxychains4


alias ucap='setxkbmap -option caps:ctrl_modifier'
alias recap='setxkbmap -option'
alias fixkey='xmodmap -e "keycode 112 = semicolon colon"'
alias wget_all='wget -r -np -k' #download all files in a page
alias lld='ls -d */'
alias git-root='cd $(git rev-parse --show-toplevel)'
alias pacsort='pacsize| sort -rhk 2| less'
alias weixin='google-chrome-stable -app=https://wx.qq.com'
alias tianyi="google-chrome-stable -app=https://cloud.189.cn/main.action"
alias baiduyun="google-chrome-stable -app=https://pan.baidu.com"
alias bdpcs="baidupcs-go"
alias rsynccl='rsync -rv --delete /home/carl/mounts/galileo/main/  /home/carl/mounts/RACOON/Calibre_Library'
# alias cl2gd="rclone sync ~/mounts/galileo/Calibre_Library gd_alves:library -v --no-update-modtime"
alias mypublicip='drill +short myip.opendns.com @resolver1.opendns.com | grep IN | tac | cut -f5 -s'
alias git-root='cd $(git rev-parse --show-toplevel)'
alias du1='du -hd0'
alias ,e='nvim ~/.zshrc'
alias prm=". ~/kit/prm.sh"
# alias ssh='autossh'
alias exp='less ~/kit/experience.sh'
alias exp-add='nvim ~/kit/experience.sh'
alias fixmode='find . -perm 000 -exec chmod 755 {} \;'

#use beam style on start up
printf '\033[5 q';
alias ng="sudo npm list -g --depth=0 2>/dev/null"
alias nl="npm list --depth=0 2>/dev/null"
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh


# ------------------BEGIN------------------------------
#  ==>tmux 
bindkey -s '^s^s' 'tmux set-option status'

# ==================END================================

# ------------------BEGIN------------------------------
#  ==> zle bindkey
#  alt+s to prepend 'sudo' to current command and move to EOL.
bindkey -e
bindkey -s '\es' 'sudo '

function _toggle-keymap {
    if ! bindkey | grep 'vi-join' > /dev/null 3>&1; then
        bindkey -e
        RPROMPT='[emacs]'
        zle reset-prompt
        printf '\033[5 q';
    else
        bindkey -v
        # function _vi-cmd-mode {
        #     vi-cmd-mode
        #     printf '\033[3 q';
        # }
        # zle -N _vi-cmd-mode
        printf '\033[3 q';
        bindkey "jk" vi-cmd-mode
        bindkey "\ee" _toggle-keymap
        zle -U ''
        RPROMPT='[vim]'
        zle reset-prompt
    fi
}

zle -N _toggle-keymap
bindkey "\ee" _toggle-keymap

# ==================END================================

# ------------------BEGIN------------------------------
#  ==>fzf
# tmux split
export FZF_TMUX=1

# Using highlight (http://www.andre-simon.de/doku/highlight/en/highlight.html)
export FZF_CTRL_T_OPTS="--preview '(highlight -O ansi -l {} 2> /dev/null || cat {} || tree -C {}) 2> /dev/null | head -200'"

#full screen mode
# export FZF_DEFAULT_OPTS='--no-height --no-reverse'

#Commands that are too long are not fully visible on screen. We can use --preview option to display the full command on the preview window. In the following example, we bind ? key for toggling the preview window.
export FZF_CTRL_R_OPTS="--preview 'echo {}' --preview-window down:3:hidden:wrap --bind '?:toggle-preview'"

fzf-history-widget-accept() {
fzf-history-widget
zle accept-line
}
zle     -N     fzf-history-widget-accept
bindkey '^X^R' fzf-history-widget-accept
# ==================END================================

# ------------------BEGIN------------------------------
#  ==>autosuggestions
ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=30
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=32'
# ==================END================================

# ------------------BEGIN------------------------------
#  ==> ENV VAR
ENABLE_CORRECTION="true"
COMPLETION_WAITING_DOTS="true"


# Save all history
# # Incrementally write history to file
setopt INC_APPEND_HISTORY
# # Save timestamp to history file too
setopt EXTENDED_HISTORY
# # Import newly written commands from the history file
setopt SHARE_HISTORY

# ==================END================================


# ------------------BEGIN------------------------------
#  ==> autoenv or direnv
if which direnv > /dev/null 2>&1;
then
    eval "$(direnv hook zsh)"
fi

if which activate.sh > /dev/null 2>&1; 
then
    source `which activate.sh`
fi
# ==================END================================




# ------------------BEGIN------------------------------
#  ==>Host

case "$(hostname)" in
    "dream")
        alias anaconda='export PATH="/opt/anaconda/bin:$PATH"'
        ZSH_THEME="rkj-repos"
        alias readbook='cd /mnt/galileo/BOOK && nohup evince "$(fzf)"'
        alias clash='sudo nohup /home/carl/local/clash-linux-amd64-v0.16.0 &'
        alias yacd='cd /home/carl/local/clash-dashboard && nohup npm start > ~/nohup.out &'
        export PATH="/home/carl/local:$PATH"
        if [ ! $TMUX ];
        then
            tmux new-session -s Home -n main -d
            # tmux send-key -t Home:1.1 "ucap && fixkey" 'Enter'
            tmux attach-session -t Home
        fi
            ;;
        "elementary")
            ZSH_THEME="frisk"
            alias anaconda='export "PATH=/home/carl/anaconda3/bin:$PATH"'
            function ml(){
                if [ -n "$1" ] && [ "$1" = "exit" ];then
                    cd ~
                    export PS1="$PS_"
                else
                    if [ -z "$(ls -A ~/wdh)" ]; then
                        echo "Trying"
                        if [ ! $(sudo mount /home/carl/wdh) ]; then
                            echo "OK"
                        else
                            echo "......"
                        fi
                    else
                        cd ~/wdh/ml/
                        export PS1="%{$fg[yellow]%}(WDH_ml) $PS1"
                    fi
                fi
            }
        alias cdy='cd /mnt/share/racoon && pwd=${PWD} && sudo caddy -conf /usr/local/caddy/Caddyfile &; cd "$pwd" '
        alias cby='calibre-server /mnt/share/racoon/Calibre_Library --userdb /home/carl/.config/calibre/user.sqlite --enable-auth &'
        alias jpy='mount ~/wdh ; anaconda && jupyter notebook &'
        ;;
    "WDH")
        unsetopt BG_NICE
        alias docker='docker.exe'
        alias gvim='gvim.exe'
        alias nvim-qt='nvim-qt.exe'
        alias anaconda='export "PATH=/mnt/e/.anaconda3/bin:$PATH"'
        alias host='sudo ~/kit/update_hosts.sh'
        export set  home='/mnt/c/Users/Administrator'
        alias CD="cd $home"
        ZSH_THEME="ys"
        # ZSH_THEME="spaceship"
        function ssho(){
            ssh $(nmblookup ${1} | awk '{print $1}')
        }
    ;;
'iMac.wdh')
    HOMEBREW_NO_AUTO_UPDATE=1
    alias Jupyter="ssh  -f administrator@WDH 'activate ml & cd ml & jupyter notebook --no-browser'"
    alias Ipython="ssh  administrator@WDH 'activate ml & cd ml & ipython'" 
    alias lizzie="java -jar ~/leela/Lizzie/lizzie.jar > /dev/null &"
    # android emulator
    function Emulator(){
        cd /Volumes/Fourth/Android/sdk/tools
        /Volumes/Fourth/Android/sdk/tools/emulator $@
    }

function pipi(){
    python3 -m pip install $@
}
export PATH=/Volumes/Fourth/Application/calibre.app/Contents/MacOS:/opt/local/bin:/opt/local/sbin:$PATH
export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles
ZSH_THEME='robbyrussell'
export ANDROID_HOME=/Volumes/Fourth/Android/sdk
export PATH=$PATH:$ANDROID_HOME/tools 
export PATH=$PATH:$ANDROID_HOME/tools/bin
export PATH=$PATH/:$ANDROID_HOME/platform-tools
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
# export PATH="/Volumes/Fourth/Anaconda/anaconda3/bin:$PATH"  # commented out by conda initialize
# alias anaconda='export PATH="/Volumes/Fourth/Anaconda/anaconda3/bin:$PATH"'
;;
*)
    ZSH_THEME="af-magic"
esac    
# ==================END================================
