Step 1:
ocr_rec.sh filename.pdf first last  # first last to indicate the start and end page of the contents
    generated tmp file "result.txt" include the recognized text.

Step 2:
ocr_test.sh 'regex' # test the regex to extract correcsponding info if ok it will insert the regext into 
    file "content" which have the " regex   layer " info. You can try manay times to insert enough rules
    and rank start from 1 not 0

Step 3:
merge.sh filename.pdf/djvu
    it will first use the content to generate a awk script, then use the awk script to write a pdf info file
    than write this info file back into the origin pdf file
    it generate a new pdf with the capitized filename of origin name 

// dont need to use \. to mean literal . use [.] instead

step 2 require dependency of fzf cmd if you want to use auto select previous archived regex, it will be activated when you run 'ocr_test' directly without a regex input

frequent regexs:
'^ *([0-9]+\.[0-9]+ *[-+?a-zA-Z —]+)[. ]*([0-9]+)$'
'^ *([0-9]* *[-+a-zA-Z —]+) *([0-9]+)$'
^(Part.*)\ +(-?[0-9]+)$
^ *([a-zA-Z‘’ —]+)[. ]*([-0-9]+)$
^ *([0-9a-zA-Z,?‘’ —]+[^0-9-])[. ]*([-0-9]+)$
^(Part [0-9a-zA-Z,?‘’ —]+[^0-9-])[. ]*([-0-9]+)$
^(I+\.[0-9]+.+[^0-9-])[. ]*([-0-9]+)$
^(V?I+\.[0-9]+.+[^0-9-])[. ]*([-0-9]+)$
^([A-Z].*)[ ]+([-0-9]+)$
^(.[0-9]{1,2}.*)[ ]+([-0-9]+)$
^([0-9].*)[ ]+([-0-9]+)$
^ *([a-zA-Z‘’: —]+)[. ]*([-0-9]+)$
^ *([0-9]* *[-+:,.a-zA-Z' —]+) *([0-9]+)$
^([0-9]+ +.*)[ ]+([-0-9]+)$
^([^0-9].*)[ ]+([-0-9]+)$
^([0-9]+[.][0-9]+ +.*)[ ]+([-0-9]+)$
